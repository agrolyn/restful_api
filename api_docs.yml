swagger: "2.0"
info:
  title: "API Documentation"
  version: "1.0"
  description: "API Documentation For AGROLYN Apps."

tags:
  - name: "auth"
    description: "Endpoints related to authentication and authorization"
  - name: "article"
    description: "Endpoints related to articles"
  - name: "recipe"
    description: "Endpoints related to recipes"

paths:
  /register:
    post:
      tags:
        - "auth"
      summary: "Register a new user"
      consumes:
        - application/json
      parameters:
        - in: body
          name: user
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              address:
                type: string
              phone_number:
                type: string
              password:
                type: string
              roles_id:
                type: integer
      responses:
        201:
          description: "User registered successfully. Check email to confirm account."
        400:
          description: "Email already exists"

  /confirm/{token}:
    get:
      tags:
        - "auth"
      summary: "Confirm user's email"
      parameters:
        - name: token
          in: path
          required: true
          type: string
          description: "The confirmation token sent via email"
      responses:
        200:
          description: "Email verified successfully"
        400:
          description: "Invalid or expired confirmation link"

  /login:
    post:
      tags:
        - "auth"
      summary: "Login user and obtain JWT token"
      consumes:
        - application/json
      parameters:
        - in: body
          name: credentials
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: "Logged in successfully and JWT token provided"
          schema:
            type: object
            properties:
              access_token:
                type: string
                description: "JWT token for authenticated requests"
        401:
          description: "Invalid credentials"
        403:
          description: "Email not verified"

  /forgot_password:
    post:
      tags:
        - "auth"
      summary: "Request password reset link"
      consumes:
        - application/json
      parameters:
        - in: body
          name: email
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        200:
          description: "Password reset email sent"
        404:
          description: "Email not found"

  /reset_password/{token}:
    post:
      tags:
        - "auth"
      summary: "Reset user password"
      consumes:
        - application/json
      parameters:
        - name: token
          in: path
          required: true
          type: string
          description: "The reset token sent via email"
        - in: body
          name: password
          required: true
          schema:
            type: object
            properties:
              new_password:
                type: string
      responses:
        200:
          description: "Password reset successfully"
        400:
          description: "Invalid or expired reset link"
        404:
          description: "User not found"

  /logout:
    post:
      tags:
        - "auth"
      summary: "Logout user and invalidate session"
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          description: "JWT token"
      responses:
        200:
          description: "Logged out successfully"

  /articles/:
    get:
      tags:
        - "article"
      summary: "Get all articles"
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          description: "JWT token"
      responses:
        200:
          description: "A list of articles"
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: "The article ID"
                title:
                  type: string
                  description: "The title of the article"
                thumbnail:
                  type: string
                  description: "URL of the article thumbnail"
                description:
                  type: string
                  description: "A brief description of the article"
                location:
                  type: string
                  description: "The location related to the article"
                released_date:
                  type: string
                  format: date
                  description: "The release date of the article"

  /articles/{id}/:
    get:
      tags:
        - "article"
      summary: "Get article detail"
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          description: "JWT token"
        - name: id
          in: path
          required: true
          type: integer
          description: "The ID of the article to retrieve"
      responses:
        200:
          description: "Article details"
          schema:
            type: object
            properties:
              id:
                type: integer
                description: "The article ID"
              title:
                type: string
                description: "The title of the article"
              thumbnail:
                type: string
                description: "URL of the article thumbnail"
              description:
                type: string
                description: "A brief description of the article"
              location:
                type: string
                description: "The location related to the article"
              released_date:
                type: string
                format: date
                description: "The release date of the article"
        404:
          description: "Article not found"

  /recipes/:
    get:
      tags:
        - "recipe"
      summary: "Get all recipes"
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          description: "JWT token"
      responses:
        200:
          description: "A list of recipes"
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: "The recipe ID"
                title:
                  type: string
                  description: "The title of the recipe"
                img_recipe:
                  type: string
                  description: "URL of the recipe image"
                ingredients:
                  type: string
                  description: "The ingredients needed for the recipe"
                steps:
                  type: string
                  description: "The instructions for preparing the recipe"

  /recipes/{id}/:
    get:
      tags:
        - "recipe"
      summary: "Get recipe detail"
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          description: "JWT token"
        - name: id
          in: path
          required: true
          type: integer
          description: "The ID of the recipe to retrieve"
      responses:
        200:
          description: "Recipe details"
          schema:
            type: object
            properties:
              id:
                type: integer
                description: "The recipe ID"
              title:
                type: string
                description: "The title of the recipe"
              img_recipe:
                type: string
                description: "URL of the recipe image"
              ingredients:
                type: string
                description: "The ingredients needed for the recipe"
              steps:
                type: string
                description: "The instructions for preparing the recipe"
        404:
          description: "Recipe not found"
